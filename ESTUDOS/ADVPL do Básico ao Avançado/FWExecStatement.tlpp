#include 'tlpp-core.th'
#include 'protheus.ch'

#define C_GRUPO  "99"
#define C_FILIAL "01"

//-------------------------------------------------------------------
/*{Protheus.doc} QryCached
Exemplo de utilização da classe FWExecStatement
 
 Classe derivada da FWPreparedStatement e que encapsula a classe FwExecCachedQuery.

Ela possui todos os métodos da FWPreparedStatement (FWPreparedStatement) 
e utiliza os conceitos do cache de queries(FWExecCachedQuery)

É utilizada para fazer cache ou não das queries executadas e realiza o bind de queries 
diretamente no banco de dados, o que torna o plano de execução das queries melhor aproveitado, 
gerando ganho de performance.

https://tdn.totvs.com/display/public/framework/FWExecStatement

*/
//-------------------------------------------------------------------
User Function FWWxecteste()
	Local cQuery    as character
	Local cAlias    as character
	Local nTime     as numeric
	Local nX        as numeric
	Local oExec     as object
    
	RpcSetEnv(C_GRUPO, C_FILIAL)

    cAlias := GetNextAlias()

	cQuery := "SELECT ? FROM " + RetSqlName("SB1") + " WHERE D_E_L_E_T_ <> ? AND B1_COD = ? "
	cQuery += " AND B1_PESO >= ? AND B1_TIPO IN (?)"
	oExec := FWExecStatement():New(cQuery)
	oExec:SetUnsafe(1,'B1_DESC')
	oExec:SetString(2,'*')
	oExec:SetString(3,'000001')
	oExec:SetNumeric(4,0)
	oExec:SetIn(5,{'PA','PI'})

	cQryNFS := oExec:GetFixQuery()

	For nX := 1 to 10
		nTime := Seconds()

		oExec:OpenAlias(@cAlias,'300','120')
		aStruQry	:= &(cAlias)->(dbStruct())
		Conout('Tempo decorrido - '+ cValToChar(Seconds() - ntime ))

		(cAlias)->(DbCloseArea())
	Next

	RpcClearEnv()

Return
